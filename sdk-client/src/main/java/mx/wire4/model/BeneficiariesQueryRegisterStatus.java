/*
 * Wire4RestAPI
 * Referencia de la API de Wire4
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package mx.wire4.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import mx.wire4.model.AccountResponse;
/**
 * BeneficiariesQueryRegisterStatus
 */


public class BeneficiariesQueryRegisterStatus {
  @SerializedName("authorization_date")
  private OffsetDateTime authorizationDate = null;

  @SerializedName("beneficiaries")
  private List<AccountResponse> beneficiaries = null;

  @SerializedName("request_date")
  private OffsetDateTime requestDate = null;

  @SerializedName("request_id")
  private String requestId = null;

  /**
   * Indica sí la petición ya fue autorizada usando el token del usuario
   */
  @JsonAdapter(StatusRequestEnum.Adapter.class)
  public enum StatusRequestEnum {
    PENDING("PENDING"),
    AUTHORIZED("AUTHORIZED");

    private String value;

    StatusRequestEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusRequestEnum fromValue(String text) {
      for (StatusRequestEnum b : StatusRequestEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusRequestEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusRequestEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusRequestEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusRequestEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("status_request")
  private StatusRequestEnum statusRequest = null;

  @SerializedName("total_beneficiaries")
  private Integer totalBeneficiaries = null;

  public BeneficiariesQueryRegisterStatus authorizationDate(OffsetDateTime authorizationDate) {
    this.authorizationDate = authorizationDate;
    return this;
  }

   /**
   * Fecha en que el usuario propietario del token autorizo el registro de beneficiarios
   * @return authorizationDate
  **/
  @Schema(description = "Fecha en que el usuario propietario del token autorizo el registro de beneficiarios")
  public OffsetDateTime getAuthorizationDate() {
    return authorizationDate;
  }

  public void setAuthorizationDate(OffsetDateTime authorizationDate) {
    this.authorizationDate = authorizationDate;
  }

  public BeneficiariesQueryRegisterStatus beneficiaries(List<AccountResponse> beneficiaries) {
    this.beneficiaries = beneficiaries;
    return this;
  }

  public BeneficiariesQueryRegisterStatus addBeneficiariesItem(AccountResponse beneficiariesItem) {
    if (this.beneficiaries == null) {
      this.beneficiaries = new ArrayList<>();
    }
    this.beneficiaries.add(beneficiariesItem);
    return this;
  }

   /**
   * Lista de beneficiarios obtenidos
   * @return beneficiaries
  **/
  @Schema(description = "Lista de beneficiarios obtenidos")
  public List<AccountResponse> getBeneficiaries() {
    return beneficiaries;
  }

  public void setBeneficiaries(List<AccountResponse> beneficiaries) {
    this.beneficiaries = beneficiaries;
  }

  public BeneficiariesQueryRegisterStatus requestDate(OffsetDateTime requestDate) {
    this.requestDate = requestDate;
    return this;
  }

   /**
   * Fecha en que se realizó la petición de registro de beneficiarios
   * @return requestDate
  **/
  @Schema(description = "Fecha en que se realizó la petición de registro de beneficiarios")
  public OffsetDateTime getRequestDate() {
    return requestDate;
  }

  public void setRequestDate(OffsetDateTime requestDate) {
    this.requestDate = requestDate;
  }

  public BeneficiariesQueryRegisterStatus requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Identificador de la petición del registro de beneficiarios
   * @return requestId
  **/
  @Schema(description = "Identificador de la petición del registro de beneficiarios")
  public String getRequestId() {
    return requestId;
  }

  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }

  public BeneficiariesQueryRegisterStatus statusRequest(StatusRequestEnum statusRequest) {
    this.statusRequest = statusRequest;
    return this;
  }

   /**
   * Indica sí la petición ya fue autorizada usando el token del usuario
   * @return statusRequest
  **/
  @Schema(description = "Indica sí la petición ya fue autorizada usando el token del usuario")
  public StatusRequestEnum getStatusRequest() {
    return statusRequest;
  }

  public void setStatusRequest(StatusRequestEnum statusRequest) {
    this.statusRequest = statusRequest;
  }

  public BeneficiariesQueryRegisterStatus totalBeneficiaries(Integer totalBeneficiaries) {
    this.totalBeneficiaries = totalBeneficiaries;
    return this;
  }

   /**
   * Total de beneficiarios enviados en la petición
   * @return totalBeneficiaries
  **/
  @Schema(description = "Total de beneficiarios enviados en la petición")
  public Integer getTotalBeneficiaries() {
    return totalBeneficiaries;
  }

  public void setTotalBeneficiaries(Integer totalBeneficiaries) {
    this.totalBeneficiaries = totalBeneficiaries;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BeneficiariesQueryRegisterStatus beneficiariesQueryRegisterStatus = (BeneficiariesQueryRegisterStatus) o;
    return Objects.equals(this.authorizationDate, beneficiariesQueryRegisterStatus.authorizationDate) &&
        Objects.equals(this.beneficiaries, beneficiariesQueryRegisterStatus.beneficiaries) &&
        Objects.equals(this.requestDate, beneficiariesQueryRegisterStatus.requestDate) &&
        Objects.equals(this.requestId, beneficiariesQueryRegisterStatus.requestId) &&
        Objects.equals(this.statusRequest, beneficiariesQueryRegisterStatus.statusRequest) &&
        Objects.equals(this.totalBeneficiaries, beneficiariesQueryRegisterStatus.totalBeneficiaries);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authorizationDate, beneficiaries, requestDate, requestId, statusRequest, totalBeneficiaries);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BeneficiariesQueryRegisterStatus {\n");
    
    sb.append("    authorizationDate: ").append(toIndentedString(authorizationDate)).append("\n");
    sb.append("    beneficiaries: ").append(toIndentedString(beneficiaries)).append("\n");
    sb.append("    requestDate: ").append(toIndentedString(requestDate)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    statusRequest: ").append(toIndentedString(statusRequest)).append("\n");
    sb.append("    totalBeneficiaries: ").append(toIndentedString(totalBeneficiaries)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
