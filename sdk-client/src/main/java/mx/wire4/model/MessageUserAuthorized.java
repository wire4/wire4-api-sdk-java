/*
 * Wire4RestAPI
 * Referencia de la API de Wire4
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package mx.wire4.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Es el objeto de mensaje que se envía mediante webhook con la información del usuario que se le autorizó el uso del API de Monex.
 */
@Schema(description = "Es el objeto de mensaje que se envía mediante webhook con la información del usuario que se le autorizó el uso del API de Monex.")


public class MessageUserAuthorized {
  @SerializedName("account")
  private String account = null;

  @SerializedName("masked_account")
  private String maskedAccount = null;

  @SerializedName("masked_name")
  private String maskedName = null;

  @SerializedName("masked_user_name")
  private String maskedUserName = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("request_id")
  private String requestId = null;

  @SerializedName("user_name")
  private String userName = null;

  public MessageUserAuthorized account(String account) {
    this.account = account;
    return this;
  }

   /**
   * Es el contrato al que se le brinda el acceso a la API.
   * @return account
  **/
  @Schema(description = "Es el contrato al que se le brinda el acceso a la API.")
  public String getAccount() {
    return account;
  }

  public void setAccount(String account) {
    this.account = account;
  }

  public MessageUserAuthorized maskedAccount(String maskedAccount) {
    this.maskedAccount = maskedAccount;
    return this;
  }

   /**
   * Es el contrato enmascarado al cual se le brinda el acceso a la API.
   * @return maskedAccount
  **/
  @Schema(description = "Es el contrato enmascarado al cual se le brinda el acceso a la API.")
  public String getMaskedAccount() {
    return maskedAccount;
  }

  public void setMaskedAccount(String maskedAccount) {
    this.maskedAccount = maskedAccount;
  }

  public MessageUserAuthorized maskedName(String maskedName) {
    this.maskedName = maskedName;
    return this;
  }

   /**
   * Es el usuario enmascarado que se autorizó.
   * @return maskedName
  **/
  @Schema(description = "Es el usuario enmascarado que se autorizó.")
  public String getMaskedName() {
    return maskedName;
  }

  public void setMaskedName(String maskedName) {
    this.maskedName = maskedName;
  }

  public MessageUserAuthorized maskedUserName(String maskedUserName) {
    this.maskedUserName = maskedUserName;
    return this;
  }

   /**
   * Es el nombre enmascarado del usuario de acceso que se autorizó.
   * @return maskedUserName
  **/
  @Schema(description = "Es el nombre enmascarado del usuario de acceso que se autorizó.")
  public String getMaskedUserName() {
    return maskedUserName;
  }

  public void setMaskedUserName(String maskedUserName) {
    this.maskedUserName = maskedUserName;
  }

  public MessageUserAuthorized name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Es el usuario que se autorizó.
   * @return name
  **/
  @Schema(description = "Es el usuario que se autorizó.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public MessageUserAuthorized requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Es el identificador de la petición cuando se solicitó la autorización.
   * @return requestId
  **/
  @Schema(description = "Es el identificador de la petición cuando se solicitó la autorización.")
  public String getRequestId() {
    return requestId;
  }

  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }

  public MessageUserAuthorized userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * Es el nombre del usuario de acceso que se autorizó.
   * @return userName
  **/
  @Schema(description = "Es el nombre del usuario de acceso que se autorizó.")
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MessageUserAuthorized messageUserAuthorized = (MessageUserAuthorized) o;
    return Objects.equals(this.account, messageUserAuthorized.account) &&
        Objects.equals(this.maskedAccount, messageUserAuthorized.maskedAccount) &&
        Objects.equals(this.maskedName, messageUserAuthorized.maskedName) &&
        Objects.equals(this.maskedUserName, messageUserAuthorized.maskedUserName) &&
        Objects.equals(this.name, messageUserAuthorized.name) &&
        Objects.equals(this.requestId, messageUserAuthorized.requestId) &&
        Objects.equals(this.userName, messageUserAuthorized.userName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(account, maskedAccount, maskedName, maskedUserName, name, requestId, userName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MessageUserAuthorized {\n");
    
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    maskedAccount: ").append(toIndentedString(maskedAccount)).append("\n");
    sb.append("    maskedName: ").append(toIndentedString(maskedName)).append("\n");
    sb.append("    maskedUserName: ").append(toIndentedString(maskedUserName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
