/*
 * Wire4RestAPI
 * Referencia de API. La API de Wire4 está organizada en torno a REST
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package mx.wire4.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Información para obtener la URL para la autorización
 */
@Schema(description = "Información para obtener la URL para la autorización")

public class PreMonexAuthorization {
  @SerializedName("business_name")
  private String businessName = null;

  @SerializedName("cancel_return_url")
  private String cancelReturnUrl = null;

  @SerializedName("return_url")
  private String returnUrl = null;

  @SerializedName("rfc")
  private String rfc = null;

  public PreMonexAuthorization businessName(String businessName) {
    this.businessName = businessName;
    return this;
  }

   /**
   * Razón social de asociada al RFC a la que debe pertenecer el contrato que se solicita
   * @return businessName
  **/
  @Schema(required = true, description = "Razón social de asociada al RFC a la que debe pertenecer el contrato que se solicita")
  public String getBusinessName() {
    return businessName;
  }

  public void setBusinessName(String businessName) {
    this.businessName = businessName;
  }

  public PreMonexAuthorization cancelReturnUrl(String cancelReturnUrl) {
    this.cancelReturnUrl = cancelReturnUrl;
    return this;
  }

   /**
   * Url a la que se redirigira en caso de que el cliente cancele el registro
   * @return cancelReturnUrl
  **/
  @Schema(required = true, description = "Url a la que se redirigira en caso de que el cliente cancele el registro")
  public String getCancelReturnUrl() {
    return cancelReturnUrl;
  }

  public void setCancelReturnUrl(String cancelReturnUrl) {
    this.cancelReturnUrl = cancelReturnUrl;
  }

  public PreMonexAuthorization returnUrl(String returnUrl) {
    this.returnUrl = returnUrl;
    return this;
  }

   /**
   * Url a la que se redirigirá en caso de exito
   * @return returnUrl
  **/
  @Schema(example = "http://mysite.com/cancel", required = true, description = "Url a la que se redirigirá en caso de exito")
  public String getReturnUrl() {
    return returnUrl;
  }

  public void setReturnUrl(String returnUrl) {
    this.returnUrl = returnUrl;
  }

  public PreMonexAuthorization rfc(String rfc) {
    this.rfc = rfc;
    return this;
  }

   /**
   * RFC de la empresa a la que debe pertenecer el contrato solicitado, si no se especifica este valor no se realiza validación
   * @return rfc
  **/
  @Schema(required = true, description = "RFC de la empresa a la que debe pertenecer el contrato solicitado, si no se especifica este valor no se realiza validación")
  public String getRfc() {
    return rfc;
  }

  public void setRfc(String rfc) {
    this.rfc = rfc;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PreMonexAuthorization preMonexAuthorization = (PreMonexAuthorization) o;
    return Objects.equals(this.businessName, preMonexAuthorization.businessName) &&
        Objects.equals(this.cancelReturnUrl, preMonexAuthorization.cancelReturnUrl) &&
        Objects.equals(this.returnUrl, preMonexAuthorization.returnUrl) &&
        Objects.equals(this.rfc, preMonexAuthorization.rfc);
  }

  @Override
  public int hashCode() {
    return Objects.hash(businessName, cancelReturnUrl, returnUrl, rfc);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PreMonexAuthorization {\n");
    
    sb.append("    businessName: ").append(toIndentedString(businessName)).append("\n");
    sb.append("    cancelReturnUrl: ").append(toIndentedString(cancelReturnUrl)).append("\n");
    sb.append("    returnUrl: ").append(toIndentedString(returnUrl)).append("\n");
    sb.append("    rfc: ").append(toIndentedString(rfc)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
