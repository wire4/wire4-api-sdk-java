/*
 * Wire4RestAPI
 * Referencia de la API de Wire4
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package mx.wire4.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import mx.wire4.model.Compay;
import mx.wire4.model.PaymentCODI;
import mx.wire4.model.SalesPoint;
/**
 * Objeto que contiene la información de las operaciones.
 */
@Schema(description = "Objeto que contiene la información de las operaciones.")

public class Operations {
  @SerializedName("amount")
  private BigDecimal amount = null;

  @SerializedName("company")
  private Compay company = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("due_date")
  private OffsetDateTime dueDate = null;

  @SerializedName("order_id")
  private String orderId = null;

  @SerializedName("payment")
  private PaymentCODI payment = null;

  @SerializedName("phone_number")
  private String phoneNumber = null;

  @SerializedName("sales_point")
  private SalesPoint salesPoint = null;

  /**
   * Estatus de la petición
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    RECEIVED("RECEIVED"),
    COMPLETED("COMPLETED"),
    CANCELLED("CANCELLED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("status")
  private StatusEnum status = null;

  /**
   * Es el tipo de petición de cobro.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    PUSH_NOTIFICATION("PUSH_NOTIFICATION"),
    QR_CODE("QR_CODE");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("type")
  private TypeEnum type = null;

  public Operations amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Es el monto de la petición.
   * @return amount
  **/
  @Schema(description = "Es el monto de la petición.")
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }

  public Operations company(Compay company) {
    this.company = company;
    return this;
  }

   /**
   * Get company
   * @return company
  **/
  @Schema(description = "")
  public Compay getCompany() {
    return company;
  }

  public void setCompany(Compay company) {
    this.company = company;
  }

  public Operations description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Es la descripción de la petición.
   * @return description
  **/
  @Schema(description = "Es la descripción de la petición.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Operations dueDate(OffsetDateTime dueDate) {
    this.dueDate = dueDate;
    return this;
  }

   /**
   * Fecha de vencimiento de la petición
   * @return dueDate
  **/
  @Schema(description = "Fecha de vencimiento de la petición")
  public OffsetDateTime getDueDate() {
    return dueDate;
  }

  public void setDueDate(OffsetDateTime dueDate) {
    this.dueDate = dueDate;
  }

  public Operations orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * Es el order id de la petición.
   * @return orderId
  **/
  @Schema(description = "Es el order id de la petición.")
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }

  public Operations payment(PaymentCODI payment) {
    this.payment = payment;
    return this;
  }

   /**
   * Get payment
   * @return payment
  **/
  @Schema(description = "")
  public PaymentCODI getPayment() {
    return payment;
  }

  public void setPayment(PaymentCODI payment) {
    this.payment = payment;
  }

  public Operations phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * Es el número de teléfono.
   * @return phoneNumber
  **/
  @Schema(description = "Es el número de teléfono.")
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public Operations salesPoint(SalesPoint salesPoint) {
    this.salesPoint = salesPoint;
    return this;
  }

   /**
   * Get salesPoint
   * @return salesPoint
  **/
  @Schema(description = "")
  public SalesPoint getSalesPoint() {
    return salesPoint;
  }

  public void setSalesPoint(SalesPoint salesPoint) {
    this.salesPoint = salesPoint;
  }

  public Operations status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Estatus de la petición
   * @return status
  **/
  @Schema(description = "Estatus de la petición")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public Operations type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Es el tipo de petición de cobro.
   * @return type
  **/
  @Schema(description = "Es el tipo de petición de cobro.")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Operations operations = (Operations) o;
    return Objects.equals(this.amount, operations.amount) &&
        Objects.equals(this.company, operations.company) &&
        Objects.equals(this.description, operations.description) &&
        Objects.equals(this.dueDate, operations.dueDate) &&
        Objects.equals(this.orderId, operations.orderId) &&
        Objects.equals(this.payment, operations.payment) &&
        Objects.equals(this.phoneNumber, operations.phoneNumber) &&
        Objects.equals(this.salesPoint, operations.salesPoint) &&
        Objects.equals(this.status, operations.status) &&
        Objects.equals(this.type, operations.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, company, description, dueDate, orderId, payment, phoneNumber, salesPoint, status, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Operations {\n");
    
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    payment: ").append(toIndentedString(payment)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    salesPoint: ").append(toIndentedString(salesPoint)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
