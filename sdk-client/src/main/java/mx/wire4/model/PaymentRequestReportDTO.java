/*
 * Wire4RestAPI
 * Referencia de la API de Wire4
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package mx.wire4.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import mx.wire4.model.Customer;
import mx.wire4.model.FailedChargesDataDTO;
import mx.wire4.model.SuccessDataDTO;
/**
 * PaymentRequestReportDTO
 */



public class PaymentRequestReportDTO {
  @SerializedName("amount")
  private String amount = null;

  @SerializedName("cancel_return_url")
  private String cancelReturnUrl = null;

  @SerializedName("customer")
  private Customer customer = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("due_date")
  private String dueDate = null;

  @SerializedName("failed_charges")
  private List<FailedChargesDataDTO> failedCharges = null;

  @SerializedName("order_id")
  private String orderId = null;

  @SerializedName("return_url")
  private String returnUrl = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    @SerializedName("NEW")
    NEW("NEW"),
    @SerializedName("REQUESTED")
    REQUESTED("REQUESTED"),
    @SerializedName("PAID")
    PAID("PAID"),
    @SerializedName("CANCELLED")
    CANCELLED("CANCELLED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("success_charge")
  private SuccessDataDTO successCharge = null;

  public PaymentRequestReportDTO amount(String amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @Schema(description = "")
  public String getAmount() {
    return amount;
  }

  public void setAmount(String amount) {
    this.amount = amount;
  }

  public PaymentRequestReportDTO cancelReturnUrl(String cancelReturnUrl) {
    this.cancelReturnUrl = cancelReturnUrl;
    return this;
  }

   /**
   * Get cancelReturnUrl
   * @return cancelReturnUrl
  **/
  @Schema(description = "")
  public String getCancelReturnUrl() {
    return cancelReturnUrl;
  }

  public void setCancelReturnUrl(String cancelReturnUrl) {
    this.cancelReturnUrl = cancelReturnUrl;
  }

  public PaymentRequestReportDTO customer(Customer customer) {
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @Schema(description = "")
  public Customer getCustomer() {
    return customer;
  }

  public void setCustomer(Customer customer) {
    this.customer = customer;
  }

  public PaymentRequestReportDTO description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public PaymentRequestReportDTO dueDate(String dueDate) {
    this.dueDate = dueDate;
    return this;
  }

   /**
   * Get dueDate
   * @return dueDate
  **/
  @Schema(description = "")
  public String getDueDate() {
    return dueDate;
  }

  public void setDueDate(String dueDate) {
    this.dueDate = dueDate;
  }

  public PaymentRequestReportDTO failedCharges(List<FailedChargesDataDTO> failedCharges) {
    this.failedCharges = failedCharges;
    return this;
  }

  public PaymentRequestReportDTO addFailedChargesItem(FailedChargesDataDTO failedChargesItem) {
    if (this.failedCharges == null) {
      this.failedCharges = new ArrayList<>();
    }
    this.failedCharges.add(failedChargesItem);
    return this;
  }

   /**
   * Get failedCharges
   * @return failedCharges
  **/
  @Schema(description = "")
  public List<FailedChargesDataDTO> getFailedCharges() {
    return failedCharges;
  }

  public void setFailedCharges(List<FailedChargesDataDTO> failedCharges) {
    this.failedCharges = failedCharges;
  }

  public PaymentRequestReportDTO orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * Get orderId
   * @return orderId
  **/
  @Schema(description = "")
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }

  public PaymentRequestReportDTO returnUrl(String returnUrl) {
    this.returnUrl = returnUrl;
    return this;
  }

   /**
   * Get returnUrl
   * @return returnUrl
  **/
  @Schema(description = "")
  public String getReturnUrl() {
    return returnUrl;
  }

  public void setReturnUrl(String returnUrl) {
    this.returnUrl = returnUrl;
  }

  public PaymentRequestReportDTO status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public PaymentRequestReportDTO successCharge(SuccessDataDTO successCharge) {
    this.successCharge = successCharge;
    return this;
  }

   /**
   * Get successCharge
   * @return successCharge
  **/
  @Schema(description = "")
  public SuccessDataDTO getSuccessCharge() {
    return successCharge;
  }

  public void setSuccessCharge(SuccessDataDTO successCharge) {
    this.successCharge = successCharge;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentRequestReportDTO paymentRequestReportDTO = (PaymentRequestReportDTO) o;
    return Objects.equals(this.amount, paymentRequestReportDTO.amount) &&
        Objects.equals(this.cancelReturnUrl, paymentRequestReportDTO.cancelReturnUrl) &&
        Objects.equals(this.customer, paymentRequestReportDTO.customer) &&
        Objects.equals(this.description, paymentRequestReportDTO.description) &&
        Objects.equals(this.dueDate, paymentRequestReportDTO.dueDate) &&
        Objects.equals(this.failedCharges, paymentRequestReportDTO.failedCharges) &&
        Objects.equals(this.orderId, paymentRequestReportDTO.orderId) &&
        Objects.equals(this.returnUrl, paymentRequestReportDTO.returnUrl) &&
        Objects.equals(this.status, paymentRequestReportDTO.status) &&
        Objects.equals(this.successCharge, paymentRequestReportDTO.successCharge);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, cancelReturnUrl, customer, description, dueDate, failedCharges, orderId, returnUrl, status, successCharge);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentRequestReportDTO {\n");
    
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    cancelReturnUrl: ").append(toIndentedString(cancelReturnUrl)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    failedCharges: ").append(toIndentedString(failedCharges)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    returnUrl: ").append(toIndentedString(returnUrl)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    successCharge: ").append(toIndentedString(successCharge)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
