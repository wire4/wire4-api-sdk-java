/*
 * Wire4RestAPI
 * Referencia de la API de Wire4
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package mx.wire4.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.LocalDate;
/**
 * CodiOperationsFiltersRequestDTO
 */


public class CodiOperationsFiltersRequestDTO {
  @SerializedName("amount_from")
  private BigDecimal amountFrom = null;

  @SerializedName("amount_to")
  private BigDecimal amountTo = null;

  @SerializedName("operation_date_from")
  private LocalDate operationDateFrom = null;

  @SerializedName("operation_date_to")
  private LocalDate operationDateTo = null;

  @SerializedName("order_id")
  private String orderId = null;

  @SerializedName("request_date_from")
  private LocalDate requestDateFrom = null;

  @SerializedName("request_date_to")
  private LocalDate requestDateTo = null;

  /**
   * Estatus de petición
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    RECEIVED("RECEIVED"),
    COMPLETED("COMPLETED"),
    CANCELLED("CANCELLED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("status")
  private StatusEnum status = null;

  public CodiOperationsFiltersRequestDTO amountFrom(BigDecimal amountFrom) {
    this.amountFrom = amountFrom;
    return this;
  }

   /**
   * Monto minimo, dos decimales
   * minimum: 1
   * maximum: 8000
   * @return amountFrom
  **/
  @Schema(description = "Monto minimo, dos decimales")
  public BigDecimal getAmountFrom() {
    return amountFrom;
  }

  public void setAmountFrom(BigDecimal amountFrom) {
    this.amountFrom = amountFrom;
  }

  public CodiOperationsFiltersRequestDTO amountTo(BigDecimal amountTo) {
    this.amountTo = amountTo;
    return this;
  }

   /**
   * Monto máximo,dos decimales
   * minimum: 1
   * maximum: 8000
   * @return amountTo
  **/
  @Schema(description = "Monto máximo,dos decimales")
  public BigDecimal getAmountTo() {
    return amountTo;
  }

  public void setAmountTo(BigDecimal amountTo) {
    this.amountTo = amountTo;
  }

  public CodiOperationsFiltersRequestDTO operationDateFrom(LocalDate operationDateFrom) {
    this.operationDateFrom = operationDateFrom;
    return this;
  }

   /**
   * Fecha de operación desde
   * @return operationDateFrom
  **/
  @Schema(description = "Fecha de operación desde")
  public LocalDate getOperationDateFrom() {
    return operationDateFrom;
  }

  public void setOperationDateFrom(LocalDate operationDateFrom) {
    this.operationDateFrom = operationDateFrom;
  }

  public CodiOperationsFiltersRequestDTO operationDateTo(LocalDate operationDateTo) {
    this.operationDateTo = operationDateTo;
    return this;
  }

   /**
   * Fecha de operación hasta
   * @return operationDateTo
  **/
  @Schema(description = "Fecha de operación hasta")
  public LocalDate getOperationDateTo() {
    return operationDateTo;
  }

  public void setOperationDateTo(LocalDate operationDateTo) {
    this.operationDateTo = operationDateTo;
  }

  public CodiOperationsFiltersRequestDTO orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * Order id de la petición
   * @return orderId
  **/
  @Schema(description = "Order id de la petición")
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }

  public CodiOperationsFiltersRequestDTO requestDateFrom(LocalDate requestDateFrom) {
    this.requestDateFrom = requestDateFrom;
    return this;
  }

   /**
   * Fecha de petición desde
   * @return requestDateFrom
  **/
  @Schema(description = "Fecha de petición desde")
  public LocalDate getRequestDateFrom() {
    return requestDateFrom;
  }

  public void setRequestDateFrom(LocalDate requestDateFrom) {
    this.requestDateFrom = requestDateFrom;
  }

  public CodiOperationsFiltersRequestDTO requestDateTo(LocalDate requestDateTo) {
    this.requestDateTo = requestDateTo;
    return this;
  }

   /**
   * Fecha de petición hasta
   * @return requestDateTo
  **/
  @Schema(description = "Fecha de petición hasta")
  public LocalDate getRequestDateTo() {
    return requestDateTo;
  }

  public void setRequestDateTo(LocalDate requestDateTo) {
    this.requestDateTo = requestDateTo;
  }

  public CodiOperationsFiltersRequestDTO status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Estatus de petición
   * @return status
  **/
  @Schema(description = "Estatus de petición")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CodiOperationsFiltersRequestDTO codiOperationsFiltersRequestDTO = (CodiOperationsFiltersRequestDTO) o;
    return Objects.equals(this.amountFrom, codiOperationsFiltersRequestDTO.amountFrom) &&
        Objects.equals(this.amountTo, codiOperationsFiltersRequestDTO.amountTo) &&
        Objects.equals(this.operationDateFrom, codiOperationsFiltersRequestDTO.operationDateFrom) &&
        Objects.equals(this.operationDateTo, codiOperationsFiltersRequestDTO.operationDateTo) &&
        Objects.equals(this.orderId, codiOperationsFiltersRequestDTO.orderId) &&
        Objects.equals(this.requestDateFrom, codiOperationsFiltersRequestDTO.requestDateFrom) &&
        Objects.equals(this.requestDateTo, codiOperationsFiltersRequestDTO.requestDateTo) &&
        Objects.equals(this.status, codiOperationsFiltersRequestDTO.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amountFrom, amountTo, operationDateFrom, operationDateTo, orderId, requestDateFrom, requestDateTo, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CodiOperationsFiltersRequestDTO {\n");
    
    sb.append("    amountFrom: ").append(toIndentedString(amountFrom)).append("\n");
    sb.append("    amountTo: ").append(toIndentedString(amountTo)).append("\n");
    sb.append("    operationDateFrom: ").append(toIndentedString(operationDateFrom)).append("\n");
    sb.append("    operationDateTo: ").append(toIndentedString(operationDateTo)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    requestDateFrom: ").append(toIndentedString(requestDateFrom)).append("\n");
    sb.append("    requestDateTo: ").append(toIndentedString(requestDateTo)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
