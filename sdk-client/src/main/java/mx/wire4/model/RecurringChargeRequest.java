/*
 * Wire4RestAPI
 * Referencia de la API de Wire4
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package mx.wire4.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.time.OffsetDateTime;
import mx.wire4.model.Customer;
import mx.wire4.model.Product;
/**
 * Objeto request para solictar la aplicación de Cargos Recurrentes
 */
@Schema(description = "Objeto request para solictar la aplicación de Cargos Recurrentes")


public class RecurringChargeRequest {
  @SerializedName("cancel_return_url")
  private String cancelReturnUrl = null;

  @SerializedName("charges")
  private Integer charges = null;

  @SerializedName("customer")
  private Customer customer = null;

  @SerializedName("first_charge_date")
  private OffsetDateTime firstChargeDate = null;

  @SerializedName("order_id")
  private String orderId = null;

  @SerializedName("product")
  private Product product = null;

  @SerializedName("return_url")
  private String returnUrl = null;

  public RecurringChargeRequest cancelReturnUrl(String cancelReturnUrl) {
    this.cancelReturnUrl = cancelReturnUrl;
    return this;
  }

   /**
   * Es la dirección URL a la que se redirigirá en caso de que el usuario cancele.
   * @return cancelReturnUrl
  **/
  @Schema(required = true, description = "Es la dirección URL a la que se redirigirá en caso de que el usuario cancele.")
  public String getCancelReturnUrl() {
    return cancelReturnUrl;
  }

  public void setCancelReturnUrl(String cancelReturnUrl) {
    this.cancelReturnUrl = cancelReturnUrl;
  }

  public RecurringChargeRequest charges(Integer charges) {
    this.charges = charges;
    return this;
  }

   /**
   * Número de cargos que se aplicarán a la tarjeta del cliente final a partir de la fecha del primer cargo
   * @return charges
  **/
  @Schema(required = true, description = "Número de cargos que se aplicarán a la tarjeta del cliente final a partir de la fecha del primer cargo")
  public Integer getCharges() {
    return charges;
  }

  public void setCharges(Integer charges) {
    this.charges = charges;
  }

  public RecurringChargeRequest customer(Customer customer) {
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @Schema(required = true, description = "")
  public Customer getCustomer() {
    return customer;
  }

  public void setCustomer(Customer customer) {
    this.customer = customer;
  }

  public RecurringChargeRequest firstChargeDate(OffsetDateTime firstChargeDate) {
    this.firstChargeDate = firstChargeDate;
    return this;
  }

   /**
   * Fecha en la que se aplicará el primer cargo a la tarjeta del cliente final 
   * @return firstChargeDate
  **/
  @Schema(required = true, description = "Fecha en la que se aplicará el primer cargo a la tarjeta del cliente final ")
  public OffsetDateTime getFirstChargeDate() {
    return firstChargeDate;
  }

  public void setFirstChargeDate(OffsetDateTime firstChargeDate) {
    this.firstChargeDate = firstChargeDate;
  }

  public RecurringChargeRequest orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * Número de orden asignado por el cliente de Wire4
   * @return orderId
  **/
  @Schema(required = true, description = "Número de orden asignado por el cliente de Wire4")
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }

  public RecurringChargeRequest product(Product product) {
    this.product = product;
    return this;
  }

   /**
   * Get product
   * @return product
  **/
  @Schema(required = true, description = "")
  public Product getProduct() {
    return product;
  }

  public void setProduct(Product product) {
    this.product = product;
  }

  public RecurringChargeRequest returnUrl(String returnUrl) {
    this.returnUrl = returnUrl;
    return this;
  }

   /**
   * Es la dirección URL a la que se redirigirá en caso de éxito.
   * @return returnUrl
  **/
  @Schema(required = true, description = "Es la dirección URL a la que se redirigirá en caso de éxito.")
  public String getReturnUrl() {
    return returnUrl;
  }

  public void setReturnUrl(String returnUrl) {
    this.returnUrl = returnUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RecurringChargeRequest recurringChargeRequest = (RecurringChargeRequest) o;
    return Objects.equals(this.cancelReturnUrl, recurringChargeRequest.cancelReturnUrl) &&
        Objects.equals(this.charges, recurringChargeRequest.charges) &&
        Objects.equals(this.customer, recurringChargeRequest.customer) &&
        Objects.equals(this.firstChargeDate, recurringChargeRequest.firstChargeDate) &&
        Objects.equals(this.orderId, recurringChargeRequest.orderId) &&
        Objects.equals(this.product, recurringChargeRequest.product) &&
        Objects.equals(this.returnUrl, recurringChargeRequest.returnUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cancelReturnUrl, charges, customer, firstChargeDate, orderId, product, returnUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RecurringChargeRequest {\n");
    
    sb.append("    cancelReturnUrl: ").append(toIndentedString(cancelReturnUrl)).append("\n");
    sb.append("    charges: ").append(toIndentedString(charges)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    firstChargeDate: ").append(toIndentedString(firstChargeDate)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    returnUrl: ").append(toIndentedString(returnUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
