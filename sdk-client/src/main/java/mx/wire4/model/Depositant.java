/*
 * Wire4RestAPI
 * Referencia de la API de Wire4
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package mx.wire4.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Objeto que contiene los datos del depositante
 */
@Schema(description = "Objeto que contiene los datos del depositante")

public class Depositant {
  @SerializedName("alias")
  private String alias = null;

  @SerializedName("currency_code")
  private String currencyCode = null;

  @SerializedName("depositant_clabe")
  private String depositantClabe = null;

  @SerializedName("email")
  private List<String> email = null;

  @SerializedName("name")
  private String name = null;

  public Depositant alias(String alias) {
    this.alias = alias;
    return this;
  }

   /**
   * Alias del depositante
   * @return alias
  **/
  @Schema(example = "mi depositante", description = "Alias del depositante")
  public String getAlias() {
    return alias;
  }

  public void setAlias(String alias) {
    this.alias = alias;
  }

  public Depositant currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * C칩digo de moneda con el que operar치 el depositante
   * @return currencyCode
  **/
  @Schema(description = "C칩digo de moneda con el que operar치 el depositante")
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  public Depositant depositantClabe(String depositantClabe) {
    this.depositantClabe = depositantClabe;
    return this;
  }

   /**
   * Cuenta clabe del depositante
   * @return depositantClabe
  **/
  @Schema(description = "Cuenta clabe del depositante")
  public String getDepositantClabe() {
    return depositantClabe;
  }

  public void setDepositantClabe(String depositantClabe) {
    this.depositantClabe = depositantClabe;
  }

  public Depositant email(List<String> email) {
    this.email = email;
    return this;
  }

  public Depositant addEmailItem(String emailItem) {
    if (this.email == null) {
      this.email = new ArrayList<>();
    }
    this.email.add(emailItem);
    return this;
  }

   /**
   * Lista de emails del depositante
   * @return email
  **/
  @Schema(description = "Lista de emails del depositante")
  public List<String> getEmail() {
    return email;
  }

  public void setEmail(List<String> email) {
    this.email = email;
  }

  public Depositant name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Nombre del depositante
   * @return name
  **/
  @Schema(description = "Nombre del depositante")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Depositant depositant = (Depositant) o;
    return Objects.equals(this.alias, depositant.alias) &&
        Objects.equals(this.currencyCode, depositant.currencyCode) &&
        Objects.equals(this.depositantClabe, depositant.depositantClabe) &&
        Objects.equals(this.email, depositant.email) &&
        Objects.equals(this.name, depositant.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alias, currencyCode, depositantClabe, email, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Depositant {\n");
    
    sb.append("    alias: ").append(toIndentedString(alias)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    depositantClabe: ").append(toIndentedString(depositantClabe)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
