/*
 * Wire4RestAPI
 * Referencia de la API de Wire4
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package mx.wire4.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * Información del producto sobre el cual se aplicarán los cobros recurrentes
 */
@Schema(description = "Información del producto sobre el cual se aplicarán los cobros recurrentes")


public class Product {
  @SerializedName("amount")
  private BigDecimal amount = null;

  /**
   * Periodo en el cual se aplicará el cargo, si no se especifica la propiedad frequency por defecto sera la unidad
   */
  @JsonAdapter(BillingPeriodEnum.Adapter.class)
  public enum BillingPeriodEnum {
    @SerializedName("WEEKLY")
    WEEKLY("WEEKLY"),
    @SerializedName("MONTHLY")
    MONTHLY("MONTHLY"),
    @SerializedName("YEARLY")
    YEARLY("YEARLY");

    private String value;

    BillingPeriodEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static BillingPeriodEnum fromValue(String input) {
      for (BillingPeriodEnum b : BillingPeriodEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<BillingPeriodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BillingPeriodEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public BillingPeriodEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return BillingPeriodEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("billing_period")
  private BillingPeriodEnum billingPeriod = null;

  @SerializedName("frequency")
  private Integer frequency = null;

  @SerializedName("name")
  private String name = null;

  public Product amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Monto del calgo que se aplicará de forma periodica
   * maximum: 8000
   * @return amount
  **/
  @Schema(required = true, description = "Monto del calgo que se aplicará de forma periodica")
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }

  public Product billingPeriod(BillingPeriodEnum billingPeriod) {
    this.billingPeriod = billingPeriod;
    return this;
  }

   /**
   * Periodo en el cual se aplicará el cargo, si no se especifica la propiedad frequency por defecto sera la unidad
   * @return billingPeriod
  **/
  @Schema(example = "WEEKLY, MONTHLY, YEARLY", required = true, description = "Periodo en el cual se aplicará el cargo, si no se especifica la propiedad frequency por defecto sera la unidad")
  public BillingPeriodEnum getBillingPeriod() {
    return billingPeriod;
  }

  public void setBillingPeriod(BillingPeriodEnum billingPeriod) {
    this.billingPeriod = billingPeriod;
  }

  public Product frequency(Integer frequency) {
    this.frequency = frequency;
    return this;
  }

   /**
   * La frecuencia en la que se aplicará el cargo, trabaja en conjunto con la propiedad billingPeriod
   * @return frequency
  **/
  @Schema(required = true, description = "La frecuencia en la que se aplicará el cargo, trabaja en conjunto con la propiedad billingPeriod")
  public Integer getFrequency() {
    return frequency;
  }

  public void setFrequency(Integer frequency) {
    this.frequency = frequency;
  }

  public Product name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Nombre del producto sobre el cual se aplicará el cobro recurrente
   * @return name
  **/
  @Schema(example = "Auto de lujo", required = true, description = "Nombre del producto sobre el cual se aplicará el cobro recurrente")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Product product = (Product) o;
    return Objects.equals(this.amount, product.amount) &&
        Objects.equals(this.billingPeriod, product.billingPeriod) &&
        Objects.equals(this.frequency, product.frequency) &&
        Objects.equals(this.name, product.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, billingPeriod, frequency, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Product {\n");
    
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    billingPeriod: ").append(toIndentedString(billingPeriod)).append("\n");
    sb.append("    frequency: ").append(toIndentedString(frequency)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
