/*
 * Wire4RestAPI
 * Referencia de la API de Wire4
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package mx.wire4.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
/**
 * CodiCodeRequestDTO
 */


public class CodiCodeRequestDTO {
  @SerializedName("amount")
  private BigDecimal amount = null;

  @SerializedName("concept")
  private String concept = null;

  @SerializedName("due_date")
  private OffsetDateTime dueDate = null;

  @SerializedName("order_id")
  private String orderId = null;

  @SerializedName("phone_number")
  private String phoneNumber = null;

  /**
   * El tipo de código QR para pago con CODI®
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    PUSH_NOTIFICATION("PUSH_NOTIFICATION"),
    QR_CODE("QR_CODE");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("type")
  private TypeEnum type = null;

  public CodiCodeRequestDTO amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Monto del pago CODI®
   * minimum: 0
   * maximum: 8000
   * @return amount
  **/
  @Schema(description = "Monto del pago CODI®")
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }

  public CodiCodeRequestDTO concept(String concept) {
    this.concept = concept;
    return this;
  }

   /**
   * Descripción del pago CODI®
   * @return concept
  **/
  @Schema(example = "Pago consumo 1024", required = true, description = "Descripción del pago CODI®")
  public String getConcept() {
    return concept;
  }

  public void setConcept(String concept) {
    this.concept = concept;
  }

  public CodiCodeRequestDTO dueDate(OffsetDateTime dueDate) {
    this.dueDate = dueDate;
    return this;
  }

   /**
   * Fecha de operación pago CODI®, formato: yyyy-MM-dd&#x27;T&#x27;HH:mm:ss
   * @return dueDate
  **/
  @Schema(required = true, description = "Fecha de operación pago CODI®, formato: yyyy-MM-dd'T'HH:mm:ss")
  public OffsetDateTime getDueDate() {
    return dueDate;
  }

  public void setDueDate(OffsetDateTime dueDate) {
    this.dueDate = dueDate;
  }

  public CodiCodeRequestDTO orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * Referencia de la transferencia asignada por el cliente
   * @return orderId
  **/
  @Schema(example = "dae9c6ae-8c7a-42e8-99f4-ebe90566efae", required = true, description = "Referencia de la transferencia asignada por el cliente")
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }

  public CodiCodeRequestDTO phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * Número de teléfono móvil en caso de ser un pago CODI® usando &#x27;PUSH_NOTIFICATION&#x27; estecampo sería obligatorio
   * @return phoneNumber
  **/
  @Schema(example = "4421012596", description = "Número de teléfono móvil en caso de ser un pago CODI® usando 'PUSH_NOTIFICATION' estecampo sería obligatorio")
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public CodiCodeRequestDTO type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * El tipo de código QR para pago con CODI®
   * @return type
  **/
  @Schema(example = "PUSH_NOTIFICATION", required = true, description = "El tipo de código QR para pago con CODI®")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CodiCodeRequestDTO codiCodeRequestDTO = (CodiCodeRequestDTO) o;
    return Objects.equals(this.amount, codiCodeRequestDTO.amount) &&
        Objects.equals(this.concept, codiCodeRequestDTO.concept) &&
        Objects.equals(this.dueDate, codiCodeRequestDTO.dueDate) &&
        Objects.equals(this.orderId, codiCodeRequestDTO.orderId) &&
        Objects.equals(this.phoneNumber, codiCodeRequestDTO.phoneNumber) &&
        Objects.equals(this.type, codiCodeRequestDTO.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, concept, dueDate, orderId, phoneNumber, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CodiCodeRequestDTO {\n");
    
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    concept: ").append(toIndentedString(concept)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
