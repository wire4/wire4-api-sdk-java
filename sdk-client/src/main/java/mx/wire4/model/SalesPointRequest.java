/*
 * Wire4RestAPI
 * Referencia de API. La API de Wire4 está organizada en torno a REST.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package mx.wire4.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Información para registrar un punto de venta asociado una empresa
 */
@Schema(description = "Información para registrar un punto de venta asociado una empresa")

public class SalesPointRequest {
  @SerializedName("access_ip")
  private String accessIp = null;

  @SerializedName("account")
  private String account = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("notifications_url")
  private String notificationsUrl = null;

  public SalesPointRequest accessIp(String accessIp) {
    this.accessIp = accessIp;
    return this;
  }

   /**
   * IP desde donde se recibiran las peticiones de este punto de venta
   * @return accessIp
  **/
  @Schema(required = true, description = "IP desde donde se recibiran las peticiones de este punto de venta")
  public String getAccessIp() {
    return accessIp;
  }

  public void setAccessIp(String accessIp) {
    this.accessIp = accessIp;
  }

  public SalesPointRequest account(String account) {
    this.account = account;
    return this;
  }

   /**
   * Número de cuenta CLABE donde se realizará el deposito del cobro CoDi
   * @return account
  **/
  @Schema(required = true, description = "Número de cuenta CLABE donde se realizará el deposito del cobro CoDi")
  public String getAccount() {
    return account;
  }

  public void setAccount(String account) {
    this.account = account;
  }

  public SalesPointRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Nombre del punto de venta
   * @return name
  **/
  @Schema(required = true, description = "Nombre del punto de venta")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public SalesPointRequest notificationsUrl(String notificationsUrl) {
    this.notificationsUrl = notificationsUrl;
    return this;
  }

   /**
   * URL para envíar notificaciones CoDi al punto de venta
   * @return notificationsUrl
  **/
  @Schema(required = true, description = "URL para envíar notificaciones CoDi al punto de venta")
  public String getNotificationsUrl() {
    return notificationsUrl;
  }

  public void setNotificationsUrl(String notificationsUrl) {
    this.notificationsUrl = notificationsUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalesPointRequest salesPointRequest = (SalesPointRequest) o;
    return Objects.equals(this.accessIp, salesPointRequest.accessIp) &&
        Objects.equals(this.account, salesPointRequest.account) &&
        Objects.equals(this.name, salesPointRequest.name) &&
        Objects.equals(this.notificationsUrl, salesPointRequest.notificationsUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessIp, account, name, notificationsUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalesPointRequest {\n");
    
    sb.append("    accessIp: ").append(toIndentedString(accessIp)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    notificationsUrl: ").append(toIndentedString(notificationsUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
