/*
 * Wire4RestAPI
 * Referencia de la API de Wire4
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package mx.wire4.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Uso y estado de la subscripción
 */
@Schema(description = "Uso y estado de la subscripción")

public class UseServiceBanking {
  /**
   * Estatus que se le asigna a la subscripción
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    ACTIVE("ACTIVE"),
    INACTIVE("INACTIVE");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("status")
  private StatusEnum status = null;

  /**
   * Uso que se le desea dar a la subscripción
   */
  @JsonAdapter(UseEnum.Adapter.class)
  public enum UseEnum {
    WITHDRAWAL_DEPOSIT("WITHDRAWAL_DEPOSIT"),
    WITHDRAWAL("WITHDRAWAL"),
    DEPOSIT("DEPOSIT");

    private String value;

    UseEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static UseEnum fromValue(String text) {
      for (UseEnum b : UseEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<UseEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final UseEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public UseEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return UseEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("use")
  private UseEnum use = null;

  public UseServiceBanking status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Estatus que se le asigna a la subscripción
   * @return status
  **/
  @Schema(required = true, description = "Estatus que se le asigna a la subscripción")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public UseServiceBanking use(UseEnum use) {
    this.use = use;
    return this;
  }

   /**
   * Uso que se le desea dar a la subscripción
   * @return use
  **/
  @Schema(required = true, description = "Uso que se le desea dar a la subscripción")
  public UseEnum getUse() {
    return use;
  }

  public void setUse(UseEnum use) {
    this.use = use;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UseServiceBanking useServiceBanking = (UseServiceBanking) o;
    return Objects.equals(this.status, useServiceBanking.status) &&
        Objects.equals(this.use, useServiceBanking.use);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, use);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UseServiceBanking {\n");
    
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    use: ").append(toIndentedString(use)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
