/*
 * Wire4RestAPI
 * Referencia de la API de Wire4
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package mx.wire4.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import mx.wire4.model.Webhook;
/**
 * Objeto que contiene la información del punto de venta que se registró.
 */
@Schema(description = "Objeto que contiene la información del punto de venta que se registró.")


public class SalesPointRespose {
  @SerializedName("sales_point_id")
  private String salesPointId = null;

  @SerializedName("user_key")
  private String userKey = null;

  @SerializedName("user_secret")
  private String userSecret = null;

  @SerializedName("webhook")
  private Webhook webhook = null;

  public SalesPointRespose salesPointId(String salesPointId) {
    this.salesPointId = salesPointId;
    return this;
  }

   /**
   * Es el identificador del punto de venta.
   * @return salesPointId
  **/
  @Schema(description = "Es el identificador del punto de venta.")
  public String getSalesPointId() {
    return salesPointId;
  }

  public void setSalesPointId(String salesPointId) {
    this.salesPointId = salesPointId;
  }

  public SalesPointRespose userKey(String userKey) {
    this.userKey = userKey;
    return this;
  }

   /**
   * Es la llave de usuario para el API Wire4. Sólo para el uso de CODI®.
   * @return userKey
  **/
  @Schema(description = "Es la llave de usuario para el API Wire4. Sólo para el uso de CODI®.")
  public String getUserKey() {
    return userKey;
  }

  public void setUserKey(String userKey) {
    this.userKey = userKey;
  }

  public SalesPointRespose userSecret(String userSecret) {
    this.userSecret = userSecret;
    return this;
  }

   /**
   * Es la contraseña para el API Wire4. Sólo para el uso de CODI®.
   * @return userSecret
  **/
  @Schema(description = "Es la contraseña para el API Wire4. Sólo para el uso de CODI®.")
  public String getUserSecret() {
    return userSecret;
  }

  public void setUserSecret(String userSecret) {
    this.userSecret = userSecret;
  }

  public SalesPointRespose webhook(Webhook webhook) {
    this.webhook = webhook;
    return this;
  }

   /**
   * Get webhook
   * @return webhook
  **/
  @Schema(description = "")
  public Webhook getWebhook() {
    return webhook;
  }

  public void setWebhook(Webhook webhook) {
    this.webhook = webhook;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalesPointRespose salesPointRespose = (SalesPointRespose) o;
    return Objects.equals(this.salesPointId, salesPointRespose.salesPointId) &&
        Objects.equals(this.userKey, salesPointRespose.userKey) &&
        Objects.equals(this.userSecret, salesPointRespose.userSecret) &&
        Objects.equals(this.webhook, salesPointRespose.webhook);
  }

  @Override
  public int hashCode() {
    return Objects.hash(salesPointId, userKey, userSecret, webhook);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalesPointRespose {\n");
    
    sb.append("    salesPointId: ").append(toIndentedString(salesPointId)).append("\n");
    sb.append("    userKey: ").append(toIndentedString(userKey)).append("\n");
    sb.append("    userSecret: ").append(toIndentedString(userSecret)).append("\n");
    sb.append("    webhook: ").append(toIndentedString(webhook)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
