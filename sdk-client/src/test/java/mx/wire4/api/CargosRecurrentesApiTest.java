/*
 * Wire4RestAPI
 * Referencia de la API de Wire4
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package mx.wire4.api;

import mx.wire4.model.ConfirmRecurringCharge;
import mx.wire4.model.ErrorResponse;
import mx.wire4.model.RecurringChargeRequest;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for CargosRecurrentesApi
 */
@Ignore
public class CargosRecurrentesApiTest {

    private final CargosRecurrentesApi api = new CargosRecurrentesApi();

    /**
     * Cancelación/desubscripción de cargos recurrentes
     *
     *  Se solicita la desuscripción de un cargo recurrente activo. En el request llevará el orderId que identifica el cargo recurrente a eliminar/dar de baja se deshabilitará tanto de openpay como del sistem wire4.&lt;br&gt; Nota: Debe considerar que para hacer uso de esta funcionalidad debe contar con un scope  especial
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteRecurringChargeUsingDELETETest() throws Exception {
        String authorization = null;
        String orderId = null;
        ConfirmRecurringCharge response = api.deleteRecurringChargeUsingDELETE(authorization, orderId);

        // TODO: test validations
    }
    /**
     * Registro de cargos recurrentes
     *
     *  Se registra una solicitud para generar un plan de cargos recurrentes. En la respuesta se proporcionará una dirección URL que lo llevará al sitio donde se le solicitará ingresar los datos de tarjeta a la que se aplicarán los cargos de acuerdo al plan seleccionado.&lt;br&gt; Nota: Debe considerar que para hacer uso de esta funcionalidad debe contar con un scope  especial
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void registerRecurringChargeUsingPOSTTest() throws Exception {
        RecurringChargeRequest body = null;
        String authorization = null;
        ConfirmRecurringCharge response = api.registerRecurringChargeUsingPOST(body, authorization);

        // TODO: test validations
    }
}
