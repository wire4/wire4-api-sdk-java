/*
 * Wire4RestAPI
 * Referencia de la API de Wire4
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package mx.wire4.api;

import mx.wire4.ApiException;
import mx.wire4.model.ErrorResponse;
import mx.wire4.model.PreEnrollmentData;
import mx.wire4.model.PreEnrollmentResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SuscripcionesApi
 */
@Ignore
public class SuscripcionesApiTest {

    private final SuscripcionesApi api = new SuscripcionesApi();

    /**
     * Registra una pre-suscripción
     *
     * Registra una pre-suscripción para operar un contrato a través de un aplicación socio de la plataforma, proporcionando una URL donde el cliente Monex debe autorizar el acceso a los datos de su cuenta a el socio.&lt;br/&gt;Una vez que el cuentahabiente autorice el acceso, se envía un mensaje webhook con el evento &#x27;ENROLLMENT.CREATED&#x27;, el cuál contiene los datos de acceso a esta API.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void preEnrollmentMonexUserUsingPOSTTest() throws ApiException {
        PreEnrollmentData body = null;
        String authorization = null;
        PreEnrollmentResponse response = api.preEnrollmentMonexUserUsingPOST(body, authorization);

        // TODO: test validations
    }
    /**
     * Elimina una suscripción por el identificador de la suscripción
     *
     * Elimina una suscripción, una vez eliminada ya no se podrán realizar operacions en el API utilizando esta suscripción
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeEnrollmentUserUsingDELETETest() throws ApiException {
        String authorization = null;
        String subscription = null;
        api.removeEnrollmentUserUsingDELETE(authorization, subscription);

        // TODO: test validations
    }
    /**
     * Elimina una pre-suscripción
     *
     * Se elimina una pre-suscripción, sólo se elimina en caso de que el cliente Monex no haya concedido su autorización de acceso (token), es decir que la pre-suscripcion este pendiente.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeSubscriptionPendingStatusUsingDELETETest() throws ApiException {
        String authorization = null;
        String subscription = null;
        api.removeSubscriptionPendingStatusUsingDELETE(authorization, subscription);

        // TODO: test validations
    }
}
